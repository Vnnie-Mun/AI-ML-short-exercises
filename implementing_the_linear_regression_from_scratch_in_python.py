# -*- coding: utf-8 -*-
"""Implementing the linear regression from scratch in python.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RdZYfzWXoK7Seozi0BZCDcJ7mHq_F_n9
"""

#importing numpy library
import numpy as np



"""Linear regression"""

class Linear_Regression:
  #initiating the parameters(learning rate and no of iterations)
  def __init__(self, learning_rate,no_of_iterations):
    self.learning_rate=learning_rate
    self.no_of_iterations=no_of_iterations


  def fit(self, X,Y):
    #Y=wX+b
    #number of training examples and number of features
    self.m,self.n=X.shape#initiate numbers ofrows and columns in the features category
    self.w=np.zeros(self.n)#initializing the weights and bias
    self.b=0
    self.X=X
    self.Y=Y

    #implementing the gradient descent
    for i in range(self.no_of_iterations):
      self.update_weights()



  def update_weights(self, ):
    Y_prediction=self.predict(self.X)
    #calculating gradients
    dw=-(2*(self.X.T).dot(self.Y-Y_prediction))/self.m
    db=-2*np.sum(self.Y-Y_prediction)/self.m
    #updating the weights
    self.w=self.w-self.learning_rate*dw
    self.b=self.b-self.learning_rate*db # Corrected variable name here

  def predict(self, X):
    return X.dot(self.w)+ self.b



"""using linear regression model foe prediction"""

import pandas as pd
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt



"""Data pre-processing"""

#loading data from the csv file
salary_data=pd.read_csv('/content/salary_data.csv')

#first 5 rows
salary_data.head()

#last 5 rows
salary_data.tail()

#print no.of rows and columns in the data frame
salary_data.shape

#checking of missing values
slary_data.isnull().sum()

"""splitting the features and targets"""

X=salary_data.iloc[:,:-1].values
Y=salary_data.iloc[:,-1].values

print(X)

print(Y)



"""splitting the data into train and test data"""

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,random_state=2)



"""Training the linear regression model"""

model=Linear_Regression(learning_rate=0.02,no_of_iterations=1000)

model.fit(X_train,Y_train)#learning process for the model

#printing the  parameter values
print('weight=',model.w[0])
print('bias=',model.b)



"""salary=9570(expeerience)+bias"""



"""Predict the salary value for salary data"""

test_data_prediction=model.predict(X_test)

print(test_data_prediction)



"""Visualizing the predicted values and actual values"""

plt.scatter(X_test,Y_test,color='red')
plt.plot(X_test,test_data_prediction,color='blue')
plt.xlabel('experience')
plt.ylabel('salary')
plt.title('salary vs experience')
plt.show()

